name: "Release actions"

on:
  push:
    tags:
      - "*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to PyPi
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@master
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      # Get updated translations
      - name: Download Lokalise CLI
        run: |
          curl -sSL \
            "https://s3-eu-west-1.amazonaws.com/lokalise-assets/cli/lokalise-0.721-linux-amd64.tgz" \
            -o ./lokalise.tgz
          tar -xvzf ./lokalise.tgz
      - name: Downloading translations
        run: |
          ./lokalise \
              --token "${{ secrets.lokalise_token }}" \
              export "190570815d9461966ae081.06523141" \
              --type json \
              --unzip_to  /tmp/lokalise \
              --filter last_reviewed_only \
              --export_empty skip \
              --export_sort a_z
      - name: Move new  translations
        run: |
          rm -R /home/runner/work/frontend/frontend/src/localize/languages/
          mkdir -p /home/runner/work/frontend/frontend/src/localize/languages/
          cp /tmp/lokalise/locale/* /home/runner/work/frontend/frontend/src/localize/languages/

      - name: "Set version number"
        run: |
          export version=${{ github.ref }}
          sed -i "s|master|${version##*/}|" ./setup.py
          sed -i "s|master|${version##*/}|" ./hacs_frontend/version.py
          sed -i "s|master|${version##*/}|" ./src/version.ts

          cat ./setup.py
          cat ./hacs_frontend/version.py
          cat ./src/version.ts

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          script/bootstrap

      - name: Build
        run: script/build

      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.0.2
        with:
          args: "New version of HACS frontend are now pushed to [PyPi](https://pypi.org/project/hacs-frontend)."
